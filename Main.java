import java.util.ArrayList;
import java.util.Scanner;
//Soyutlama: sadece ihtiyaÃ§ duyulan bilgilerin kullanÄ±cÄ±ya sunulmasÄ± ve gereksiz detaylarÄ±n saklanmasÄ±dÄ±r.
//  SOYUT SINIF (Ã¼rÃ¼nlerin ortak yapÄ±sÄ± tanÄ±mlandÄ± ve gereksiz detaylar gizlendi.)
abstract class Urun {
    //private ile dÄ±ÅŸarÄ±dan eriÅŸim engellenip kapsÃ¼lleme saÄŸlandÄ±.(kontrollÃ¼ eriÅŸim)
    private String ad;
    private double fiyat;

    public Urun(String ad, double fiyat) {
        this.ad = ad;
        this.fiyat = fiyat;
    }
    //kapsÃ¼lleme sayesinde veriyi koruduk.Sadece getter metodlarÄ± ile bu yapÄ±lara eriÅŸilebilir.
    public String getAd() {
        return ad;
    }

    public double getFiyat() {
        return fiyat;
    }
    //Ã‡ok BiÃ§imlilik: AynÄ± isimdeki metodun farklÄ± sÄ±nÄ±flarda farklÄ± davranmasÄ±dÄ±r.
//bilgiGoster() her Ã¼rÃ¼nde farklÄ± Ã§alÄ±ÅŸmasÄ±na Ã§ok biÃ§imlilik diyoruz.
    public abstract void bilgiGoster();
}
//KalÄ±tÄ±m:Bir Ã¼st sÄ±nÄ±ftan Ã¶zelliklerin miras alÄ±nmasÄ±dÄ±r.
//extends Urun yazan kÄ±sÄ±mlarÄ±nda kalÄ±tÄ±m Ã¶zelliÄŸini kullandÄ±k.Ãœst satÄ±rlarda belirttiÄŸimiz ad ve fiyat Ã¶zelliklerini otomatik alarak aynÄ± kodun tekrar yazÄ±lmasÄ±na engel olunuyor.
// Elektronik ÃœrÃ¼n
class ElektronikUrun extends Urun {
    private int garantiYili;

    public ElektronikUrun(String ad, double fiyat, int garantiYili) {
        super(ad, fiyat);
        this.garantiYili = garantiYili;
    }

    @Override //Bu bilgiGoster() metodu, Urun sÄ±nÄ±fÄ±ndaki soyut metodun yeni halidir.(override bu amaÃ§la kullanÄ±lÄ±r.)
    public void bilgiGoster() {
        System.out.println("Elektronik ÃœrÃ¼n: " + getAd() +
                " | Fiyat: " + getFiyat() + "â‚º | Garanti: " + garantiYili + " yÄ±l");
    }
}

// Giyim ÃœrÃ¼nÃ¼
class GiyimUrunu extends Urun {
    private String beden;

    public GiyimUrunu(String ad, double fiyat, String beden) {
        super(ad, fiyat);
        this.beden = beden;
    }

    //  Beden sonradan seÃ§ilecekse "-" default atanÄ±r
    public GiyimUrunu(String ad, double fiyat) {
        super(ad, fiyat);
        this.beden = "-";
    }

    public String getBeden() {
        return beden;
    }

    @Override
    public void bilgiGoster() {
        System.out.println("Giyim ÃœrÃ¼nÃ¼: " + getAd() +
                " | Fiyat: " + getFiyat() + "â‚º" +
                (beden.equals("-") ? "" : " | Beden: " + beden));
    }
}

// KiÅŸisel BakÄ±m ÃœrÃ¼nÃ¼
class KisiselBakimUrunu extends Urun {
    public KisiselBakimUrunu(String ad, double fiyat) {
        super(ad, fiyat);
    }

    @Override
    public void bilgiGoster() {
        System.out.println("KiÅŸisel BakÄ±m ÃœrÃ¼nÃ¼: " + getAd() + " | Fiyat: " + getFiyat() + "â‚º");
    }
}

// SEPET SINIFI
// Sepete Ã¼rÃ¼n ekleme, Ã§Ä±karma ve gÃ¶sterme iÅŸlemleri buradadÄ±r.
class Sepet {
    private ArrayList<Urun> urunler = new ArrayList<>();

    //sepete Ã¼rÃ¼n eklenir.
    public void urunEkle(Urun urun) {
        urunler.add(urun);
        System.out.println(urun.getAd() + " sepete eklendi!");
    }

    //Ã¼rÃ¼n isim ile sepetten Ã§Ä±karÄ±lÄ±r.
    public void urunCikar(String urunAdi) {
        boolean bulundu = false;
        for (int i = 0; i < urunler.size(); i++) {
            if (urunler.get(i).getAd().equalsIgnoreCase(urunAdi)) {
                System.out.println(urunler.get(i).getAd() + " sepetten Ã§Ä±karÄ±ldÄ±!");
                urunler.remove(i);
                bulundu = true;
                break;
            }
        }
        if (!bulundu) {
            System.out.println("Bu isimde bir Ã¼rÃ¼n sepette bulunamadÄ±!");
        }
    }

    //sepetteki Ã¼rÃ¼nleri listeler.
    public void sepetGoster() {
        System.out.println("\nğŸ›’ Sepetiniz:");
        if (urunler.isEmpty()) {
            System.out.println("Sepet boÅŸ!");
        } else {
            for (Urun u : urunler) {
                u.bilgiGoster();
            }
            System.out.println("Toplam Tutar: " + toplamTutarHesapla() + "â‚º");
        }
    }

    //Ã¼rÃ¼nlerin toplam tutarÄ±nÄ± hesaplar.
    public double toplamTutarHesapla() {
        double toplam = 0;
        for (Urun u : urunler) {
            toplam += u.getFiyat();
        }
        return toplam;
    }
}

// ANA SINIF
public class Main {
    public static void main(String[] args) {
        Scanner giris = new Scanner(System.in);

//Ã¶rnek Ã¼rÃ¼nler oluÅŸturuyoruz.
        ElektronikUrun laptop = new ElektronikUrun("Laptop", 25000, 2);
        ElektronikUrun telefon = new ElektronikUrun("Telefon", 18000, 1);
        ElektronikUrun televizyon = new ElektronikUrun("Televizyon", 15000, 2);
        ElektronikUrun akilli_saat = new ElektronikUrun("AkÄ±llÄ± Saat", 3000, 2);
        ElektronikUrun bluetooth_kulaklÄ±k = new ElektronikUrun("Bluetooth KulaklÄ±k", 4000, 1);
        ElektronikUrun elektrik_supurgesi = new ElektronikUrun("Elektrik SÃ¼pÃ¼rgesi", 5000, 2);
        GiyimUrunu tisort = new GiyimUrunu("TiÅŸÃ¶rt", 250);
        GiyimUrunu pantolon = new GiyimUrunu("Pantolon", 600);
        GiyimUrunu gomlek = new GiyimUrunu("GÃ¶mlek", 500);
        GiyimUrunu kazak = new GiyimUrunu("Kazak", 450);
        GiyimUrunu ayakkabi = new GiyimUrunu("AyakkabÄ±", 1000);
        GiyimUrunu canta = new GiyimUrunu("Ã‡anta", 800);
        GiyimUrunu mont = new GiyimUrunu("Mont", 1500);
        KisiselBakimUrunu yuz_temizleme_jeli = new KisiselBakimUrunu("YÃ¼z Temizleme Jeli", 200);
        KisiselBakimUrunu maske = new KisiselBakimUrunu("Maske", 150);
        KisiselBakimUrunu nemlendirici = new KisiselBakimUrunu("Nemlendirici", 250);
        KisiselBakimUrunu tonik = new KisiselBakimUrunu("Tonik", 150);

//TÃ¼m Ã¼rÃ¼nleri liste iÃ§ine ekliyoruz.
        ArrayList<Urun> urunListesi = new ArrayList<>();
        urunListesi.add(laptop);
        urunListesi.add(telefon);
        urunListesi.add(televizyon);
        urunListesi.add(akilli_saat);
        urunListesi.add(bluetooth_kulaklÄ±k);
        urunListesi.add(elektrik_supurgesi);
        urunListesi.add(tisort);
        urunListesi.add(pantolon);
        urunListesi.add(gomlek);
        urunListesi.add(kazak);
        urunListesi.add(ayakkabi);
        urunListesi.add(canta);
        urunListesi.add(mont);
        urunListesi.add(yuz_temizleme_jeli);
        urunListesi.add(maske);
        urunListesi.add(nemlendirici);
        urunListesi.add(tonik);

        Sepet sepet = new Sepet(); //sepet oluÅŸturma

        int secim;
        do {
            //kullanÄ±cÄ± menÃ¼sÃ¼
            System.out.println("\n====== E-Ticaret Sepet UygulamasÄ± ======");
            System.out.println("1. ÃœrÃ¼nleri Listele");
            System.out.println("2. ÃœrÃ¼nÃ¼ Sepete Ekle");
            System.out.println("3. ÃœrÃ¼nÃ¼ Sepetten Ã‡Ä±kar");
            System.out.println("4. Sepeti GÃ¶rÃ¼ntÃ¼le");
            System.out.println("0. Ã‡Ä±kÄ±ÅŸ");
            System.out.print("SeÃ§iminiz: ");
            secim = giris.nextInt(); //BoÅŸta kalan Enter karakterini siler
            giris.nextLine(); // buffer temizliÄŸi (KullanÄ±cÄ±dan alÄ±nan bir sonraki metin giriÅŸinin bozulmamasÄ± iÃ§in)

            switch (secim) {
                case 1:
                    System.out.println("\n--- ÃœrÃ¼n Listesi ---");
                    //Ã¼rÃ¼nleri numaralandÄ±rarak gÃ¶ster
                    for (int i = 0; i < urunListesi.size(); i++) {
                        System.out.print((i + 1) + ". ");
                        urunListesi.get(i).bilgiGoster();
                    }
                    break;

                case 2:
                    System.out.print("Sepete eklemek istediÄŸiniz Ã¼rÃ¼n numarasÄ±nÄ± girin: ");
                    int urunNo = giris.nextInt();
                    giris.nextLine(); // buffer temizliÄŸi

                    //seÃ§im geÃ§erliyse devam et
                    if (urunNo > 0 && urunNo <= urunListesi.size()) {
                        Urun secilenUrun = urunListesi.get(urunNo - 1);

                        // Giyim Ã¼rÃ¼nleri iÃ§in beden/numara seÃ§imi
                        if (secilenUrun instanceof GiyimUrunu) {
                            GiyimUrunu eski = (GiyimUrunu) secilenUrun;
                            String ad = eski.getAd().toLowerCase();

                            // AyakkabÄ± ise numara sor
                            if (ad.contains("ayakkabÄ±")) {
                                System.out.print("Numara seÃ§in (37 / 38 / 39 / 40 / 41 / 42): ");
                                String secilenNumara = giris.nextLine();
                                //yeni ayakkabÄ± nesnesi oluÅŸturulur.
                                GiyimUrunu yeni = new GiyimUrunu(eski.getAd(), eski.getFiyat(), secilenNumara);
                                sepet.urunEkle(yeni);

                                // Ã‡anta ise beden sorma
                            } else if (ad.contains("Ã§anta")) {
                                sepet.urunEkle(eski);

                                // DiÄŸer giyim Ã¼rÃ¼nleri iÃ§in klasik beden seÃ§imi
                            } else {
                                System.out.print("Beden seÃ§in (S / M / L / XL): ");
                                String secilenBeden = giris.nextLine().toUpperCase();
                                GiyimUrunu yeni = new GiyimUrunu(eski.getAd(), eski.getFiyat(), secilenBeden);
                                sepet.urunEkle(yeni);
                            }
                        } else {
                            // Giyim dÄ±ÅŸÄ±ndaki Ã¼rÃ¼nler direkt eklenir
                            sepet.urunEkle(secilenUrun);
                        }
                    } else {
                        System.out.println("GeÃ§ersiz Ã¼rÃ¼n numarasÄ±!");
                    }
                    break;


                case 3:
                    System.out.print("Ã‡Ä±karmak istediÄŸiniz Ã¼rÃ¼nÃ¼n adÄ±nÄ± girin: ");
                    String urunAdi = giris.nextLine();
                    sepet.urunCikar(urunAdi);
                    break;

                case 4:
                    sepet.sepetGoster();
                    break;

                case 0:
                    System.out.println("Programdan Ã§Ä±kÄ±lÄ±yor...");
                    break;

                default:
                    System.out.println("GeÃ§ersiz seÃ§im!");
            }
        } while (secim != 0);
    }
}
